version: '3.1'

services:
  app:
    container_name: auth
    networks:
      - auth-network
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - AWS_ACCESS_KEY_ID=$AWS_ACCESS_KEY_ID
        - AWS_SECRET_ACCESS_KEY=$AWS_SECRET_ACCESS_KEY
        - AWS_SESSION_TOKEN=$AWS_SESSION_TOKEN
        - AWS_SECRET_KEY_NAME=$AWS_SECRET_KEY_NAME
        - AWS_REGION=$AWS_REGION
        - AWS_OUTPUT=$AWS_OUTPUT
        - GIT_TOKEN=$GIT_TOKEN
        - MYSQL_USER=$MYSQL_USER
        - MYSQL_PASSWORD=$MYSQL_PASSWORD
        - MYSQL_ROOT_PASSWORD=$MYSQL_ROOT_PASSWORD
    ports:
      - "8001:8001"
    depends_on:
      - mysql
      - redis

  redis:
    container_name: auth-redis
    image: redis:latest
    networks:
      - auth-network
    ports:
      - "6379:6379"
    restart: always

  mysql:
    container_name: auth-mysql
    image: mysql:latest
    networks:
      - auth-network
    volumes:
      - mysql_data:/var/lib/mysql
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: $MYSQL_ROOT_PASSWORD
      MYSQL_DATABASE: $MYSQL_DATABASE
      AWS_SECRET_KEY_NAME: $AWS_SECRET_KEY_NAME
    user: root
    ports:
      - "3306:3306"
volumes:
  mysql_data:

networks:
  auth-network:
    driver: bridge